{{ $values := .Values }}
{{ $chart := .Chart }}
{{ range $idx, $item := .Values.applications }}
{{ range $idx, $version := $item.versions }}
{{ $errorRatio := (index $item.errorRatios $idx) }}
{{ $latency := (index $item.latencies $idx) }}
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ $item.name }}-{{ $version }}
  labels:
    app: {{ $item.name }}
    version: {{ $version }}
spec:
  replicas: {{ $item.replicaCount | default $values.replicaCount }}
  selector:
    matchLabels:
      app: {{ $item.name }}
  template:
    metadata:
      annotations:
        "sidecar.evangelist.info/authn": ""
        "sidecar.evangelist.info/target": "{{ $item.name }}-http1:6000"
        # "traffic.sidecar.istio.io/includeInboundPorts": "6000,6001,17001"
      labels:
        app: {{ $item.name }}
        version: {{ $version }}
    spec:
      nodeSelector:
        soa: "true"
      serviceAccountName: {{ $item.name }}-{{ $version }}
      containers:
      - name: server
        image: "{{ $values.image.repository }}:{{ $values.image.tag }}"
        imagePullPolicy: {{ $values.image.pullPolicy }}
        ports:
        - containerPort: 6000
          name: http
        - containerPort: 6001
          name: http2
        command:
        - "/root/mockserver"
        - "--name={{ $item.name }}"
        - "--http1-addr=:6000"
        - "--http2-addr=:6001"
        {{ if $latency }}- "--latency-milliseconds={{ $latency }}"{{ end }}
        {{ if $errorRatio }}- "--error-ratio={{ $errorRatio }}"{{ end }}
        {{ if $item.redisAddr }}- "--redis-addr={{ $item.redisAddr }}"{{ else }}# skip redis address{{ end }}
        {{ if $item.http1target }}- "--http1-target={{ if $values.enableAuthn }}{{ if $item.http1targetAuthn }}{{ $item.http1targetAuthn }}{{ else }}{{ $item.http1target }}{{ end }}{{ else }}{{ $item.http1target }}{{ end }}"{{ else }}# skip HTTP/1.1 target{{ end }}
        {{ if $item.http2target }}- "--http2-target={{ $item.http2target }}"{{ else }}# skip HTTP/2 target{{ end }}
---
{{ end }}

apiVersion: v1
kind: Service
metadata:
  name: {{ $item.name }}-http1
  labels:
    tier: mock
    app: {{ $item.name }}-http1
    version: {{ $item.version }}
spec:
  type: {{ $item.serviceType | default "ClusterIP" }}
  ports:
  - port: 6000
    name: http
  selector:
    app: {{ $item.name }}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ $item.name }}-http2
  labels:
    tier: mock
    app: {{ $item.name }}-http2
    version: {{ $item.version }}
spec:
  type: {{ $item.serviceType | default "ClusterIP" }}
  ports:
  - port: 6001
    name: grpc
  selector:
    app: {{ $item.name }}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ $item.name }}-authn
  labels:
    tier: mock
    app: {{ $item.name }}-authn
    version: {{ $item.version }}
spec:
  type: {{ $item.serviceType | default "ClusterIP" }}
  ports:
  - port: 17001
    name: http-17001
  selector:
    app: {{ $item.name }}

{{ if $values.enableAuthn }}
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: {{ $item.name }}-authn
spec:
  host: {{ $item.name }}-authn
  trafficPolicy:
    # tls:
    #   mode: ISTIO_MUTUAL
    connectionPool:
      tcp:
        maxConnections: 50
        connectTimeout: 3s
  subsets:
  {{- range $idx, $version := $item.versions }}
  - name: {{ $version }}
    labels:
      version: {{ $version }}
    trafficPolicy:
      loadBalancer:
        simple: LEAST_CONN
  {{ end -}}
{{ end }}
---

{{ end }}

