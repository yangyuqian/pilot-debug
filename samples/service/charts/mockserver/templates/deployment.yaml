{{ $values := .Values }}
{{ $chart := .Chart }}
{{ range $idx, $item := .Values.applications }}
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ $item.name }}
  labels:
    app: {{ $item.name }}
    version: {{ $item.version }}
spec:
  replicas: {{ $item.replicaCount | default $values.replicaCount }}
  selector:
    matchLabels:
      app: {{ $item.name }}
      version: {{ $item.version }}
  template:
    metadata:
      labels:
        tier: mock
        app: {{ $item.name }}
        version: {{ $item.version }}
    spec:
      containers:
        - name: server
          image: "{{ $values.image.repository }}:{{ $values.image.tag }}"
          imagePullPolicy: {{ $values.image.pullPolicy }}
          ports:
          - name: "http1"
            containerPort: 6000
            protocol: "TCP"
          - name: "http2"
            containerPort: 6001
            protocol: "TCP"
          command:
          - "/root/mockserver"
          - "-name={{ $item.name }}"
          - "-http1-addr=:6000"
          - "-http2-addr=:6001"
          {{ if $item.redisAddr }}- "-redis-addr={{ $item.redisAddr }}"{{ else }}# skip redis address{{ end }}
          {{ if $item.redisSentinelAddrs }}- "-redis-sentinel-addrs={{ $item.redisSentinelAddrs }}"{{ else }}# skip redis sentinel address{{ end }}
          {{ if $item.http1target }}- "-http1-target={{ $item.http1target }}"{{ else }}# skip HTTP/1.1 target{{ end }}
          {{ if $item.http2target }}- "-http2-target={{ $item.http2target }}"{{ else }}# skip HTTP/2 target{{ end }}

{{ if $item.ports }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $item.name }}
  labels:
    tier: mock
    app: {{ $item.name }}
    version: {{ $item.version }}
  {{- if eq $item.serviceType "LoadBalancer" }}
  annotations:
    "service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled": "true"
    "service.beta.kubernetes.io/aws-load-balancer-internal": "true"
  {{ end }}
spec:
  type: {{ $item.serviceType | default "ClusterIP" }}
  ports:
  - port: 6000
    targetPort: 6000
    protocol: "TCP"
    name: http1
  selector:
    app: {{ $item.name }}
    version: {{ $item.version }}

---
{{ else }}
# skip service without definition
{{ end }}
{{ end }}
